/*
 * generated by Xtext 2.25.0
 */
grammar InternalJsonQ;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.course.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.course.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.course.services.JsonQGrammarAccess;

}
@parser::members {
	private JsonQGrammarAccess grammarAccess;

	public void setGrammarAccess(JsonQGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleJSONQueryModel
entryRuleJSONQueryModel
:
{ before(grammarAccess.getJSONQueryModelRule()); }
	 ruleJSONQueryModel
{ after(grammarAccess.getJSONQueryModelRule()); } 
	 EOF 
;

// Rule JSONQueryModel
ruleJSONQueryModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSONQueryModelAccess().getInputStatementAssignment()); }
		(rule__JSONQueryModel__InputStatementAssignment)*
		{ after(grammarAccess.getJSONQueryModelAccess().getInputStatementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatements
entryRuleStatements
:
{ before(grammarAccess.getStatementsRule()); }
	 ruleStatements
{ after(grammarAccess.getStatementsRule()); } 
	 EOF 
;

// Rule Statements
ruleStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementsAccess().getAlternatives()); }
		(rule__Statements__Alternatives)
		{ after(grammarAccess.getStatementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregateStatements
entryRuleAggregateStatements
:
{ before(grammarAccess.getAggregateStatementsRule()); }
	 ruleAggregateStatements
{ after(grammarAccess.getAggregateStatementsRule()); } 
	 EOF 
;

// Rule AggregateStatements
ruleAggregateStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregateStatementsAccess().getGroup()); }
		(rule__AggregateStatements__Group__0)
		{ after(grammarAccess.getAggregateStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGetStatements
entryRuleGetStatements
:
{ before(grammarAccess.getGetStatementsRule()); }
	 ruleGetStatements
{ after(grammarAccess.getGetStatementsRule()); } 
	 EOF 
;

// Rule GetStatements
ruleGetStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetStatementsAccess().getGroup()); }
		(rule__GetStatements__Group__0)
		{ after(grammarAccess.getGetStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionalQuery
entryRuleAdditionalQuery
:
{ before(grammarAccess.getAdditionalQueryRule()); }
	 ruleAdditionalQuery
{ after(grammarAccess.getAdditionalQueryRule()); } 
	 EOF 
;

// Rule AdditionalQuery
ruleAdditionalQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionalQueryAccess().getGroup()); }
		(rule__AdditionalQuery__Group__0)
		{ after(grammarAccess.getAdditionalQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputVal
entryRuleInputVal
:
{ before(grammarAccess.getInputValRule()); }
	 ruleInputVal
{ after(grammarAccess.getInputValRule()); } 
	 EOF 
;

// Rule InputVal
ruleInputVal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputValAccess().getAlternatives()); }
		(rule__InputVal__Alternatives)
		{ after(grammarAccess.getInputValAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINTLiteral
entryRuleINTLiteral
:
{ before(grammarAccess.getINTLiteralRule()); }
	 ruleINTLiteral
{ after(grammarAccess.getINTLiteralRule()); } 
	 EOF 
;

// Rule INTLiteral
ruleINTLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINTLiteralAccess().getValueAssignment()); }
		(rule__INTLiteral__ValueAssignment)
		{ after(grammarAccess.getINTLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OperationAgg
ruleOperationAgg
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAggAccess().getAVGEnumLiteralDeclaration()); }
		('AVG')
		{ after(grammarAccess.getOperationAggAccess().getAVGEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OperationGET
ruleOperationGET
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationGETAccess().getAlternatives()); }
		(rule__OperationGET__Alternatives)
		{ after(grammarAccess.getOperationGETAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule InputFieldSingle
ruleInputFieldSingle
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getAlternatives()); }
		(rule__InputFieldSingle__Alternatives)
		{ after(grammarAccess.getInputFieldSingleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementsAccess().getGetStatementsParserRuleCall_0()); }
		ruleGetStatements
		{ after(grammarAccess.getStatementsAccess().getGetStatementsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementsAccess().getAggregateStatementsParserRuleCall_1()); }
		ruleAggregateStatements
		{ after(grammarAccess.getStatementsAccess().getAggregateStatementsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__ConnectorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalQueryAccess().getConnectorANDKeyword_0_0_0()); }
		'AND'
		{ after(grammarAccess.getAdditionalQueryAccess().getConnectorANDKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionalQueryAccess().getConnectorORKeyword_0_0_1()); }
		'OR'
		{ after(grammarAccess.getAdditionalQueryAccess().getConnectorORKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputValAccess().getINTLiteralParserRuleCall_0()); }
		ruleINTLiteral
		{ after(grammarAccess.getInputValAccess().getINTLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputValAccess().getStringLiteralParserRuleCall_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getInputValAccess().getStringLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationGET__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationGETAccess().getDATAEnumLiteralDeclaration_0()); }
		('DATA')
		{ after(grammarAccess.getOperationGETAccess().getDATAEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationGETAccess().getCOUNTEnumLiteralDeclaration_1()); }
		('COUNT')
		{ after(grammarAccess.getOperationGETAccess().getCOUNTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputFieldSingle__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getFirstNameEnumLiteralDeclaration_0()); }
		('firstName')
		{ after(grammarAccess.getInputFieldSingleAccess().getFirstNameEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getLastNameEnumLiteralDeclaration_1()); }
		('lastName')
		{ after(grammarAccess.getInputFieldSingleAccess().getLastNameEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getGenderEnumLiteralDeclaration_2()); }
		('gender')
		{ after(grammarAccess.getInputFieldSingleAccess().getGenderEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getCounrtyCodeEnumLiteralDeclaration_3()); }
		('counrtyCode')
		{ after(grammarAccess.getInputFieldSingleAccess().getCounrtyCodeEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getCityNameEnumLiteralDeclaration_4()); }
		('cityName')
		{ after(grammarAccess.getInputFieldSingleAccess().getCityNameEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getIsVaccinatedEnumLiteralDeclaration_5()); }
		('isVaccinated')
		{ after(grammarAccess.getInputFieldSingleAccess().getIsVaccinatedEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getInputFieldSingleAccess().getIncomeEnumLiteralDeclaration_6()); }
		('income')
		{ after(grammarAccess.getInputFieldSingleAccess().getIncomeEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateStatements__Group__0__Impl
	rule__AggregateStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateStatementsAccess().getGETKeyword_0()); }
	'GET'
	{ after(grammarAccess.getAggregateStatementsAccess().getGETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateStatements__Group__1__Impl
	rule__AggregateStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateStatementsAccess().getOpAggAssignment_1()); }
	(rule__AggregateStatements__OpAggAssignment_1)
	{ after(grammarAccess.getAggregateStatementsAccess().getOpAggAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateStatements__Group__2__Impl
	rule__AggregateStatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateStatementsAccess().getAggFieldAssignment_2()); }
	(rule__AggregateStatements__AggFieldAssignment_2)
	{ after(grammarAccess.getAggregateStatementsAccess().getAggFieldAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateStatements__Group__3__Impl
	rule__AggregateStatements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateStatementsAccess().getWHEREKeyword_3()); }
	'WHERE'
	{ after(grammarAccess.getAggregateStatementsAccess().getWHEREKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateStatements__Group__4__Impl
	rule__AggregateStatements__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateStatementsAccess().getQ1keyAssignment_4()); }
	(rule__AggregateStatements__Q1keyAssignment_4)
	{ after(grammarAccess.getAggregateStatementsAccess().getQ1keyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateStatements__Group__5__Impl
	rule__AggregateStatements__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateStatementsAccess().getQ1valAssignment_5()); }
	(rule__AggregateStatements__Q1valAssignment_5)
	{ after(grammarAccess.getAggregateStatementsAccess().getQ1valAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AggregateStatements__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateStatementsAccess().getQryadditionalAssignment_6()); }
	(rule__AggregateStatements__QryadditionalAssignment_6)?
	{ after(grammarAccess.getAggregateStatementsAccess().getQryadditionalAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GetStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetStatements__Group__0__Impl
	rule__GetStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetStatementsAccess().getGETKeyword_0()); }
	'GET'
	{ after(grammarAccess.getGetStatementsAccess().getGETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetStatements__Group__1__Impl
	rule__GetStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetStatementsAccess().getOpGetAssignment_1()); }
	(rule__GetStatements__OpGetAssignment_1)
	{ after(grammarAccess.getGetStatementsAccess().getOpGetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetStatements__Group__2__Impl
	rule__GetStatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetStatementsAccess().getWHEREKeyword_2()); }
	'WHERE'
	{ after(grammarAccess.getGetStatementsAccess().getWHEREKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetStatements__Group__3__Impl
	rule__GetStatements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetStatementsAccess().getQ1keyAssignment_3()); }
	(rule__GetStatements__Q1keyAssignment_3)
	{ after(grammarAccess.getGetStatementsAccess().getQ1keyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetStatements__Group__4__Impl
	rule__GetStatements__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetStatementsAccess().getQ1valAssignment_4()); }
	(rule__GetStatements__Q1valAssignment_4)
	{ after(grammarAccess.getGetStatementsAccess().getQ1valAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetStatements__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetStatementsAccess().getQryadditionalAssignment_5()); }
	(rule__GetStatements__QryadditionalAssignment_5)?
	{ after(grammarAccess.getGetStatementsAccess().getQryadditionalAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalQuery__Group__0__Impl
	rule__AdditionalQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalQueryAccess().getConnectorAssignment_0()); }
	(rule__AdditionalQuery__ConnectorAssignment_0)
	{ after(grammarAccess.getAdditionalQueryAccess().getConnectorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalQuery__Group__1__Impl
	rule__AdditionalQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalQueryAccess().getQ2keyAssignment_1()); }
	(rule__AdditionalQuery__Q2keyAssignment_1)
	{ after(grammarAccess.getAdditionalQueryAccess().getQ2keyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalQuery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalQueryAccess().getQ2valAssignment_2()); }
	(rule__AdditionalQuery__Q2valAssignment_2)
	{ after(grammarAccess.getAdditionalQueryAccess().getQ2valAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSONQueryModel__InputStatementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSONQueryModelAccess().getInputStatementStatementsParserRuleCall_0()); }
		ruleStatements
		{ after(grammarAccess.getJSONQueryModelAccess().getInputStatementStatementsParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__OpAggAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateStatementsAccess().getOpAggOperationAggEnumRuleCall_1_0()); }
		ruleOperationAgg
		{ after(grammarAccess.getAggregateStatementsAccess().getOpAggOperationAggEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__AggFieldAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateStatementsAccess().getAggFieldInputFieldSingleEnumRuleCall_2_0()); }
		ruleInputFieldSingle
		{ after(grammarAccess.getAggregateStatementsAccess().getAggFieldInputFieldSingleEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Q1keyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateStatementsAccess().getQ1keyInputFieldSingleEnumRuleCall_4_0()); }
		ruleInputFieldSingle
		{ after(grammarAccess.getAggregateStatementsAccess().getQ1keyInputFieldSingleEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__Q1valAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateStatementsAccess().getQ1valInputValParserRuleCall_5_0()); }
		ruleInputVal
		{ after(grammarAccess.getAggregateStatementsAccess().getQ1valInputValParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AggregateStatements__QryadditionalAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateStatementsAccess().getQryadditionalAdditionalQueryParserRuleCall_6_0()); }
		ruleAdditionalQuery
		{ after(grammarAccess.getAggregateStatementsAccess().getQryadditionalAdditionalQueryParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__OpGetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetStatementsAccess().getOpGetOperationGETEnumRuleCall_1_0()); }
		ruleOperationGET
		{ after(grammarAccess.getGetStatementsAccess().getOpGetOperationGETEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Q1keyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetStatementsAccess().getQ1keyInputFieldSingleEnumRuleCall_3_0()); }
		ruleInputFieldSingle
		{ after(grammarAccess.getGetStatementsAccess().getQ1keyInputFieldSingleEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__Q1valAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetStatementsAccess().getQ1valInputValParserRuleCall_4_0()); }
		ruleInputVal
		{ after(grammarAccess.getGetStatementsAccess().getQ1valInputValParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetStatements__QryadditionalAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetStatementsAccess().getQryadditionalAdditionalQueryParserRuleCall_5_0()); }
		ruleAdditionalQuery
		{ after(grammarAccess.getGetStatementsAccess().getQryadditionalAdditionalQueryParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__ConnectorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalQueryAccess().getConnectorAlternatives_0_0()); }
		(rule__AdditionalQuery__ConnectorAlternatives_0_0)
		{ after(grammarAccess.getAdditionalQueryAccess().getConnectorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__Q2keyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalQueryAccess().getQ2keyInputFieldSingleEnumRuleCall_1_0()); }
		ruleInputFieldSingle
		{ after(grammarAccess.getAdditionalQueryAccess().getQ2keyInputFieldSingleEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalQuery__Q2valAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalQueryAccess().getQ2valInputValParserRuleCall_2_0()); }
		ruleInputVal
		{ after(grammarAccess.getAdditionalQueryAccess().getQ2valInputValParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__INTLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getINTLiteralAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getINTLiteralAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
