/**
 * generated by Xtext 2.25.0
 */
package uk.ac.kcl.course.ui.quickfix;

import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModification;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;
import uk.ac.kcl.course.validation.JsonQValidator;

/**
 * Custom quickfixes.
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
@SuppressWarnings("all")
public class JsonQQuickfixProvider extends DefaultQuickfixProvider {
  @Fix(JsonQValidator.INVALID_INPUT_GENDER)
  public void genderValueCorrection(final Issue issue, final IssueResolutionAcceptor acceptor) {
    final IModification _function = new IModification() {
      public void apply(final IModificationContext context) throws Exception {
        final IXtextDocument query = context.getXtextDocument();
        query.replace((issue.getOffset()).intValue(), (issue.getLength()).intValue(), "\"Male\"");
      }
    };
    acceptor.accept(issue, "Gender Value Correction - Male", "Gender Value selection Male", null, _function);
    final IModification _function_1 = new IModification() {
      public void apply(final IModificationContext context) throws Exception {
        final IXtextDocument query = context.getXtextDocument();
        query.replace((issue.getOffset()).intValue(), (issue.getLength()).intValue(), "\"Female\"");
      }
    };
    acceptor.accept(issue, "Gender Value Correction - Female", "Gender Value selection Female", null, _function_1);
  }
  
  @Fix(JsonQValidator.INVALID_INPUT_VACCINATED)
  public void isVaccinatedValueCorrection(final Issue issue, final IssueResolutionAcceptor acceptor) {
    final IModification _function = new IModification() {
      public void apply(final IModificationContext context) throws Exception {
        final IXtextDocument query = context.getXtextDocument();
        query.replace((issue.getOffset()).intValue(), (issue.getLength()).intValue(), "\"Yes\"");
      }
    };
    acceptor.accept(issue, "Set isVaccinated to Yes", "Boolean values expected - Yes", null, _function);
    final IModification _function_1 = new IModification() {
      public void apply(final IModificationContext context) throws Exception {
        final IXtextDocument query = context.getXtextDocument();
        query.replace((issue.getOffset()).intValue(), (issue.getLength()).intValue(), "\"No\"");
      }
    };
    acceptor.accept(issue, "Set isVaccinated to No", "Boolean values expected - No", null, _function_1);
  }
}
