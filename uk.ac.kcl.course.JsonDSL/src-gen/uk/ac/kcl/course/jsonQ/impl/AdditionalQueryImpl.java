/**
 * generated by Xtext 2.25.0
 */
package uk.ac.kcl.course.jsonQ.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.course.jsonQ.AdditionalQuery;
import uk.ac.kcl.course.jsonQ.InputFieldSingle;
import uk.ac.kcl.course.jsonQ.InputVal;
import uk.ac.kcl.course.jsonQ.JsonQPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Additional Query</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.course.jsonQ.impl.AdditionalQueryImpl#getConnector <em>Connector</em>}</li>
 *   <li>{@link uk.ac.kcl.course.jsonQ.impl.AdditionalQueryImpl#getQ2key <em>Q2key</em>}</li>
 *   <li>{@link uk.ac.kcl.course.jsonQ.impl.AdditionalQueryImpl#getQ2val <em>Q2val</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdditionalQueryImpl extends MinimalEObjectImpl.Container implements AdditionalQuery
{
  /**
   * The default value of the '{@link #getConnector() <em>Connector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnector()
   * @generated
   * @ordered
   */
  protected static final String CONNECTOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConnector() <em>Connector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnector()
   * @generated
   * @ordered
   */
  protected String connector = CONNECTOR_EDEFAULT;

  /**
   * The default value of the '{@link #getQ2key() <em>Q2key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQ2key()
   * @generated
   * @ordered
   */
  protected static final InputFieldSingle Q2KEY_EDEFAULT = InputFieldSingle.FIRST_NAME;

  /**
   * The cached value of the '{@link #getQ2key() <em>Q2key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQ2key()
   * @generated
   * @ordered
   */
  protected InputFieldSingle q2key = Q2KEY_EDEFAULT;

  /**
   * The cached value of the '{@link #getQ2val() <em>Q2val</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQ2val()
   * @generated
   * @ordered
   */
  protected InputVal q2val;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdditionalQueryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JsonQPackage.Literals.ADDITIONAL_QUERY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getConnector()
  {
    return connector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConnector(String newConnector)
  {
    String oldConnector = connector;
    connector = newConnector;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JsonQPackage.ADDITIONAL_QUERY__CONNECTOR, oldConnector, connector));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InputFieldSingle getQ2key()
  {
    return q2key;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQ2key(InputFieldSingle newQ2key)
  {
    InputFieldSingle oldQ2key = q2key;
    q2key = newQ2key == null ? Q2KEY_EDEFAULT : newQ2key;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JsonQPackage.ADDITIONAL_QUERY__Q2KEY, oldQ2key, q2key));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InputVal getQ2val()
  {
    return q2val;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetQ2val(InputVal newQ2val, NotificationChain msgs)
  {
    InputVal oldQ2val = q2val;
    q2val = newQ2val;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JsonQPackage.ADDITIONAL_QUERY__Q2VAL, oldQ2val, newQ2val);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQ2val(InputVal newQ2val)
  {
    if (newQ2val != q2val)
    {
      NotificationChain msgs = null;
      if (q2val != null)
        msgs = ((InternalEObject)q2val).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JsonQPackage.ADDITIONAL_QUERY__Q2VAL, null, msgs);
      if (newQ2val != null)
        msgs = ((InternalEObject)newQ2val).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JsonQPackage.ADDITIONAL_QUERY__Q2VAL, null, msgs);
      msgs = basicSetQ2val(newQ2val, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JsonQPackage.ADDITIONAL_QUERY__Q2VAL, newQ2val, newQ2val));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JsonQPackage.ADDITIONAL_QUERY__Q2VAL:
        return basicSetQ2val(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JsonQPackage.ADDITIONAL_QUERY__CONNECTOR:
        return getConnector();
      case JsonQPackage.ADDITIONAL_QUERY__Q2KEY:
        return getQ2key();
      case JsonQPackage.ADDITIONAL_QUERY__Q2VAL:
        return getQ2val();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JsonQPackage.ADDITIONAL_QUERY__CONNECTOR:
        setConnector((String)newValue);
        return;
      case JsonQPackage.ADDITIONAL_QUERY__Q2KEY:
        setQ2key((InputFieldSingle)newValue);
        return;
      case JsonQPackage.ADDITIONAL_QUERY__Q2VAL:
        setQ2val((InputVal)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JsonQPackage.ADDITIONAL_QUERY__CONNECTOR:
        setConnector(CONNECTOR_EDEFAULT);
        return;
      case JsonQPackage.ADDITIONAL_QUERY__Q2KEY:
        setQ2key(Q2KEY_EDEFAULT);
        return;
      case JsonQPackage.ADDITIONAL_QUERY__Q2VAL:
        setQ2val((InputVal)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JsonQPackage.ADDITIONAL_QUERY__CONNECTOR:
        return CONNECTOR_EDEFAULT == null ? connector != null : !CONNECTOR_EDEFAULT.equals(connector);
      case JsonQPackage.ADDITIONAL_QUERY__Q2KEY:
        return q2key != Q2KEY_EDEFAULT;
      case JsonQPackage.ADDITIONAL_QUERY__Q2VAL:
        return q2val != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (connector: ");
    result.append(connector);
    result.append(", q2key: ");
    result.append(q2key);
    result.append(')');
    return result.toString();
  }

} //AdditionalQueryImpl
