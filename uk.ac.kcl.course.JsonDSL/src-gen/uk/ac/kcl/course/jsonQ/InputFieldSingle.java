/**
 * generated by Xtext 2.25.0
 */
package uk.ac.kcl.course.jsonQ;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Input Field Single</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see uk.ac.kcl.course.jsonQ.JsonQPackage#getInputFieldSingle()
 * @model
 * @generated
 */
public enum InputFieldSingle implements Enumerator
{
  /**
   * The '<em><b>First Name</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FIRST_NAME_VALUE
   * @generated
   * @ordered
   */
  FIRST_NAME(0, "firstName", "firstName"),

  /**
   * The '<em><b>Last Name</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LAST_NAME_VALUE
   * @generated
   * @ordered
   */
  LAST_NAME(1, "lastName", "lastName"),

  /**
   * The '<em><b>Gender</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GENDER_VALUE
   * @generated
   * @ordered
   */
  GENDER(2, "gender", "gender"),

  /**
   * The '<em><b>Counrty Code</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COUNRTY_CODE_VALUE
   * @generated
   * @ordered
   */
  COUNRTY_CODE(3, "counrtyCode", "counrtyCode"),

  /**
   * The '<em><b>City Name</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CITY_NAME_VALUE
   * @generated
   * @ordered
   */
  CITY_NAME(4, "cityName", "cityName"),

  /**
   * The '<em><b>Is Vaccinated</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IS_VACCINATED_VALUE
   * @generated
   * @ordered
   */
  IS_VACCINATED(5, "isVaccinated", "isVaccinated"),

  /**
   * The '<em><b>Income</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INCOME_VALUE
   * @generated
   * @ordered
   */
  INCOME(6, "income", "income");

  /**
   * The '<em><b>First Name</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FIRST_NAME
   * @model name="firstName"
   * @generated
   * @ordered
   */
  public static final int FIRST_NAME_VALUE = 0;

  /**
   * The '<em><b>Last Name</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LAST_NAME
   * @model name="lastName"
   * @generated
   * @ordered
   */
  public static final int LAST_NAME_VALUE = 1;

  /**
   * The '<em><b>Gender</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GENDER
   * @model name="gender"
   * @generated
   * @ordered
   */
  public static final int GENDER_VALUE = 2;

  /**
   * The '<em><b>Counrty Code</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COUNRTY_CODE
   * @model name="counrtyCode"
   * @generated
   * @ordered
   */
  public static final int COUNRTY_CODE_VALUE = 3;

  /**
   * The '<em><b>City Name</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CITY_NAME
   * @model name="cityName"
   * @generated
   * @ordered
   */
  public static final int CITY_NAME_VALUE = 4;

  /**
   * The '<em><b>Is Vaccinated</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IS_VACCINATED
   * @model name="isVaccinated"
   * @generated
   * @ordered
   */
  public static final int IS_VACCINATED_VALUE = 5;

  /**
   * The '<em><b>Income</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INCOME
   * @model name="income"
   * @generated
   * @ordered
   */
  public static final int INCOME_VALUE = 6;

  /**
   * An array of all the '<em><b>Input Field Single</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final InputFieldSingle[] VALUES_ARRAY =
    new InputFieldSingle[]
    {
      FIRST_NAME,
      LAST_NAME,
      GENDER,
      COUNRTY_CODE,
      CITY_NAME,
      IS_VACCINATED,
      INCOME,
    };

  /**
   * A public read-only list of all the '<em><b>Input Field Single</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<InputFieldSingle> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Input Field Single</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static InputFieldSingle get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      InputFieldSingle result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Input Field Single</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static InputFieldSingle getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      InputFieldSingle result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Input Field Single</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static InputFieldSingle get(int value)
  {
    switch (value)
    {
      case FIRST_NAME_VALUE: return FIRST_NAME;
      case LAST_NAME_VALUE: return LAST_NAME;
      case GENDER_VALUE: return GENDER;
      case COUNRTY_CODE_VALUE: return COUNRTY_CODE;
      case CITY_NAME_VALUE: return CITY_NAME;
      case IS_VACCINATED_VALUE: return IS_VACCINATED;
      case INCOME_VALUE: return INCOME;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private InputFieldSingle(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //InputFieldSingle
